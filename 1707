#include<iostream>
#include<vector>

using namespace std;

vector<int> v[30000];
int color[30000];

bool res;

void dfs(int x,int col){

    for(int i=0;i<v[x].size();i++){
        int next = v[x][i];
        if(color[next]==0){
            color[next] = 3-color[x];
            dfs(next,color[next]);
        }
        else if(color[next]==color[x]) res = false;
    }
}

int main(){

    int num,n,m,a,b;

    cin>>num;
    for(int k=1;k<=num;k++){
        cin>>n>>m;

        for(int i=1;i<=n;i++){
            v[i].clear();
            color[i] = 0;
        }


        for(int i=1;i<=m;i++){
            cin>>a>>b;
            v[a].push_back(b);
            v[b].push_back(a);
        }

        res = true;

        for(int i=1;i<=n;i++){
            if(color[i]==0) dfs(i,1);
        }

        if(res) cout<<"YES"<<endl;
        else cout<<"NO"<<endl;
    }

    return 0;
}
